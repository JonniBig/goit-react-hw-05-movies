{"version":3,"file":"static/js/298.9ca1ad17.chunk.js","mappings":"+PAWA,EATmB,SAAC,GAAuB,IAAtBA,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC3B,OACE,2BACE,oCAAYD,MACZ,uBAAIC,MAGT,ECoDD,EAxDgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCN,EAAAA,EAAAA,UACtC,yCADF,eAAOO,EAAP,KAAqBC,EAArB,KAqBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEIL,GAAa,GAFjB,UAG0BM,EAAAA,EAAAA,IAAUZ,GAHpC,OAGUG,EAHV,OAIIC,EAAWD,GAJf,gDAMIK,GAAY,GACZE,EAAgB,KAAMG,SAP1B,yBASIP,GAAa,GATjB,6EAFc,sBACTN,GADS,mCAcdc,EACD,GAAE,CAACd,KAGF,gCACGO,IACC,0BACE,uBAAIE,MAGPJ,IACC,0BACE,wCAGgB,IAAnBF,EAAQY,QACP,4DAEA,wBACGZ,EAAQa,KAAI,SAAAlB,GAAM,OACjB,SAAC,EAAD,CAEEA,OAAQA,EAAOA,OACfC,QAASD,EAAOC,SAFXD,EAAOE,GAFG,QAW5B,C,qLCvDKiB,E,OAAYC,EAAAA,OAAa,CAC7BC,QAAS,CACPC,cAAc,UAAD,OAJf,0NAQWC,EAAiB,mCAAG,sGACRJ,EAAUK,IAC/B,kEAF6B,uBACvBC,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAQ,mCAAG,WAAMC,GAAN,yFACCR,EAAUK,IAAV,6CACiBG,IAFlB,uBACdF,EADc,EACdA,KADc,kBAKfA,GALe,2CAAH,sDAQRG,EAAO,mCAAG,WAAMD,GAAN,yFACER,EAAUK,IAAV,6CACiBG,EADjB,aADF,uBACbF,EADa,EACbA,KADa,kBAIdA,EAAKI,MAJS,2CAAH,sDAOPf,EAAS,mCAAG,WAAMa,GAAN,yFACAR,EAAUK,IAAV,6CACiBG,EADjB,aADA,uBACfF,EADe,EACfA,KADe,kBAKhBA,EAAKK,SALW,2CAAH,sDAQTC,EAAc,mCAAG,WAAMC,GAAN,yFACLb,EAAUK,IAAV,0DAC8BQ,IAFzB,uBACpBP,EADoB,EACpBA,KADoB,kBAKrBA,EAAKK,SALgB,2CAAH,qD","sources":["components/ReviewItem/ReviewItem.jsx","components/Reviews/Reviews.jsx","services/getTrendingMovies.jsx"],"sourcesContent":["import React from 'react';\n\nconst ReviewItem = ({author, content}) => {\n  return (\n    <li>\n      <p>Author: {author}</p>\n      <p>{content}</p>\n    </li>\n  );\n}\n\nexport default ReviewItem;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReview } from 'services/getTrendingMovies';\nimport ReviewItem from '../ReviewItem/ReviewItem';\n\nconst Reviews = () => {\n  const { id } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\n    'Something went wrong! Try again later'\n  );\n\n  useEffect(() => {\n    if (!id) return;\n    async function fetchReviews() {\n      try {\n        setIsLoading(true);\n        const reviews = await getReview(id);\n        setReviews(reviews);\n      } catch (error) {\n        setHasError(true);\n        setErrorMessage(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      {hasError && (\n        <div>\n          <p>{errorMessage}</p>\n        </div>\n      )}\n      {isLoading && (\n        <div>\n          <p>Loading...</p>\n        </div>\n      )}\n      {reviews.length === 0 ? (\n        <p>No reviews for this movie found</p>\n      ) : (\n        <ul>\n          {reviews.map(author => (\n            <ReviewItem\n              key={author.id}\n              author={author.author}\n              content={author.content}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst token =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjOTNkN2JiMGI5M2ZlMDM3MmQ4YTZkNDJkOGE5NGNhOCIsInN1YiI6IjY1MmFmZjY3ZWE4NGM3MDBhZWYyOGFmZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JoJ09IKYIcQbLxtX-lIS9ov1ytunDzmtILtaCy1xGqw';\n\nconst authAxios = axios.create({\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await authAxios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US'\n  );\n\n  return data;\n};\n\nexport const getMovie = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`\n  );\n\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`\n  );\n  return data.cast;\n};\n\nexport const getReview = async movieId => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`\n  );\n\n  return data.results;\n};\n\nexport const getMovieSearch = async movieName => {\n  const { data } = await authAxios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movieName}`\n  );\n\n  return data.results;\n};\n"],"names":["author","content","id","useParams","useState","reviews","setReviews","isLoading","setIsLoading","hasError","setHasError","errorMessage","setErrorMessage","useEffect","getReview","message","fetchReviews","length","map","authAxios","axios","headers","Authorization","getTrendingMovies","get","data","getMovie","movieId","getCast","cast","results","getMovieSearch","movieName"],"sourceRoot":""}